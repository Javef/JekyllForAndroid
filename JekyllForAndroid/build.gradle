import java.text.SimpleDateFormat
import groovy.swing.SwingBuilder

buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://repo.eclipse.org/content/groups/releases/' }
        maven { url 'https://repo.commonsware.com.s3.amazonaws.com' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url 'https://github.com/rockerhieu/mvn-repo/raw/master/' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.11.+'
        classpath 'org.robolectric.gradle:gradle-android-test-plugin:0.10.1-SNAPSHOT'
    }
}
apply plugin: 'android'
apply plugin: 'android-test'

repositories {
    mavenCentral()
    maven { url 'https://repo.eclipse.org/content/groups/releases/' }
    maven { url 'https://repo.commonsware.com.s3.amazonaws.com' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

dependencies {
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'org.eclipse.mylyn.github:org.eclipse.egit.github.core:3.2.0.201312181205-r'
    compile 'com.commonsware.cwac:anddown:0.2.0'
    compile 'de.cketti.library.changelog:ckchangelog:1.2.0'
    compile 'com.squareup:otto:1.3.4'
    compile 'com.android.support:appcompat-v7:+'
    compile 'com.readystatesoftware.systembartint:systembartint:+'
    testCompile 'junit:junit:4.10'
    testCompile 'org.robolectric:robolectric:2.3'
    testCompile 'com.squareup:fest-android:1.0.+'
    androidTestCompile 'junit:junit:4.10'
    androidTestCompile 'org.robolectric:robolectric:2.3'
    androidTestCompile 'com.squareup:fest-android:1.0.+'
    compile files('libs/snakeyaml-1.14-SNAPSHOT-android.jar')
}

def getBuildName() {
    return new SimpleDateFormat("yyMMdd-HHmm").format(new Date());
}

android {
    compileSdkVersion 19
    buildToolsVersion '19.1'

    defaultConfig {
        minSdkVersion 11
        targetSdkVersion 18
    }

    sourceSets {
        instrumentTest.setRoot('src/test')
    }

    signingConfigs
            {
                debug
                        {
                            storeFile file("debug.keystore")
                        }

                release
                        {

                            def pass = ''
                            if (System.console() == null) {
                                new SwingBuilder().edt {
                                    dialog(modal: true, // Otherwise the build will continue running before you closed the dialog
                                            title: 'Enter password', // Dialog title
                                            alwaysOnTop: true, // pretty much what the name says
                                            resizable: false, // Don't allow the user to resize the dialog
                                            locationRelativeTo: null, // Place dialog in center of the screen
                                            pack: true, // We need to pack the dialog (so it will take the size of it's children)
                                            show: true // Let's show it
                                    ) {
                                        vbox { // Put everything below each other
                                            label(text: "Please enter key passphrase:")
                                            input = passwordField()
                                            button(defaultButton: true, text: 'OK', actionPerformed: {
                                                pass = input.password;
                                                // Set pass variable to value of input field
                                                dispose(); // Close dialog
                                            })
                                        } // vbox end
                                    } // dialog end
                                } // edt end
                            } else {
                                pass = System.console().readPassword("\nPlease enter key passphrase: ")
                                pass = new String(pass)
                            }

                            if (pass.size() <= 0) {
                                throw new InvalidUserDataException("You must enter a password to proceed.")
                            }

                            storeFile file("release.keystore")
                            storePassword pass
                            keyAlias "jekyllforandroid"
                            keyPassword pass

                        }
            }

    buildTypes
            {
                debug
                        {
                            applicationIdSuffix ".debug"
                            versionNameSuffix " debug " + getBuildName()
                        }

                release
                        {
                            signingConfig signingConfigs.release
                        }
            }

    lintOptions {
        checkReleaseBuilds false
    }
}